SwinTransformerSys expand initial----depths:[2, 2, 2, 2];depths_decoder:[1, 2, 2, 2];drop_path_rate:0.1;num_classes:4
C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torch\functional.py:539: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at C:\actions-runner\_work\pytorch\pytorch\pytorch\aten\src\ATen\native\TensorShape.cpp:3638.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
---final upsample expand_first---
loading data from the directory: C:\Users\Shreeyut\deep-learning-lab\UNET-SWIN\SwinUNET_Flash_Attention\network\STARCOP\ang20190922t192642_r2048_c0_w512_h512-20250410T125838Z-001
Found 1 valid image-mask pairs
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(0.8467, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(0.0740, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-0.3588, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-0.7609, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-1.0826, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-1.3623, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-1.6241, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-1.8790, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-1.9413, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
torch.Size([1, 4, 224, 224])
tensor(-2.3539, device='cuda:0',
       grad_fn=<BinaryCrossEntropyWithLogitsBackward0>)
