SwinTransformerSys expand initial----depths:[2, 2, 2, 2];depths_decoder:[1, 2, 2, 2];drop_path_rate:0.1;num_classes:4
C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torch\functional.py:539: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at C:\actions-runner\_work\pytorch\pytorch\pytorch\aten\src\ATen\native\TensorShape.cpp:3638.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
---final upsample expand_first---
loading data from the directory: C:\Users\Shreeyut\deep-learning-lab\UNET-SWIN\SwinUNET_Flash_Attention\network\STARCOP\ang20190922t192642_r2048_c0_w512_h512-20250410T125838Z-001
Found 1 valid image-mask pairs
Traceback (most recent call last):
  File "c:\Users\Shreeyut\deep-learning-lab\UNET-SWIN\SwinUNET_Flash_Attention\network\trainer.py", line 56, in <module>
    for img,mask in training_generator:
                    ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torch\utils\data\dataloader.py", line 708, in __next__
    data = self._next_data()
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torch\utils\data\dataloader.py", line 764, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torch\utils\data\_utils\fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "c:\Users\Shreeyut\deep-learning-lab\UNET-SWIN\SwinUNET_Flash_Attention\network\dataset.py", line 80, in __getitem__
    img = self.transform(img)
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torchvision\transforms\transforms.py", line 95, in __call__
    img = t(img)
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torch\nn\modules\module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torch\nn\modules\module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torchvision\transforms\transforms.py", line 354, in forward
    return F.resize(img, self.size, self.interpolation, self.max_size, self.antialias)
           ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torchvision\transforms\functional.py", line 465, in resize
    _, image_height, image_width = get_dimensions(img)
                                   ~~~~~~~~~~~~~~^^^^^
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torchvision\transforms\functional.py", line 80, in get_dimensions
    return F_pil.get_dimensions(img)
           ~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\Shreeyut\AppData\Roaming\Python\Python313\site-packages\torchvision\transforms\_functional_pil.py", line 31, in get_dimensions
    raise TypeError(f"Unexpected type {type(img)}")
TypeError: Unexpected type <class 'numpy.ndarray'>
